let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/.vim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 alias.vim
badd +2 functions.vim
badd +0 init.vim
badd +0 keybinds.vim
badd +1 plugins.vim
badd +1 help
argglobal
silent! argdel *
$argadd alias.vim
$argadd functions.vim
$argadd init.vim
$argadd keybinds.vim
$argadd plugins.vim
edit init.vim
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
wincmd _ | wincmd |
split
3wincmd k
wincmd w
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=1 winminwidth=1 winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 121 + 142) / 284)
exe '2resize ' . ((&lines * 16 + 39) / 79)
exe 'vert 2resize ' . ((&columns * 162 + 142) / 284)
exe '3resize ' . ((&lines * 16 + 39) / 79)
exe 'vert 3resize ' . ((&columns * 162 + 142) / 284)
exe '4resize ' . ((&lines * 20 + 39) / 79)
exe 'vert 4resize ' . ((&columns * 162 + 142) / 284)
exe '5resize ' . ((&lines * 21 + 39) / 79)
exe 'vert 5resize ' . ((&columns * 162 + 142) / 284)
argglobal
3argu
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 32 - ((31 * winheight(0) + 38) / 76)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
32
normal! 03|
wincmd w
argglobal
4argu
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 8) / 16)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 03|
wincmd w
argglobal
5argu
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 54 - ((10 * winheight(0) + 8) / 16)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
54
normal! 0
wincmd w
argglobal
5argu
if bufexists('/usr/share/nvim/runtime/doc/starting.txt') | buffer /usr/share/nvim/runtime/doc/starting.txt | else | edit /usr/share/nvim/runtime/doc/starting.txt | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 801 - ((4 * winheight(0) + 10) / 20)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
801
normal! 026|
wincmd w
argglobal
5argu
if bufexists('functions.vim') | buffer functions.vim | else | edit functions.vim | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 10) / 21)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
4wincmd w
exe 'vert 1resize ' . ((&columns * 121 + 142) / 284)
exe '2resize ' . ((&lines * 16 + 39) / 79)
exe 'vert 2resize ' . ((&columns * 162 + 142) / 284)
exe '3resize ' . ((&lines * 16 + 39) / 79)
exe 'vert 3resize ' . ((&columns * 162 + 142) / 284)
exe '4resize ' . ((&lines * 20 + 39) / 79)
exe 'vert 4resize ' . ((&columns * 162 + 142) / 284)
exe '5resize ' . ((&lines * 21 + 39) / 79)
exe 'vert 5resize ' . ((&columns * 162 + 142) / 284)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
