let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd /usr/src/zshlabs
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 Makefile
badd +1 main.zsh
badd +1 zsh
badd +771 /usr/share/nvim/runtime/doc/quickfix.txt
badd +40 /ashe/nvim/autoload/keybinds.vim
badd +1 /ashe/nvim/autoload/functions.vim
badd +1 /ashe/nvim/autoload/ashe/core/ftplugin.vim
badd +0 /ashe/nvim/autoload/ashe/core/window.vim
badd +0 man://zshall(1)
argglobal
%argdel
$argadd Makefile
$argadd main.zsh
set stal=2
edit Makefile
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 82 + 45) / 90)
exe 'vert 1resize ' . ((&columns * 160 + 160) / 320)
exe '2resize ' . ((&lines * 4 + 45) / 90)
exe 'vert 2resize ' . ((&columns * 160 + 160) / 320)
exe 'vert 3resize ' . ((&columns * 159 + 160) / 320)
argglobal
enew
file man://zshall(1)
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
wincmd w
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 2) / 4)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 04|
wincmd w
argglobal
2argu
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 3 - ((2 * winheight(0) + 43) / 87)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
3
normal! 0
wincmd w
exe '1resize ' . ((&lines * 82 + 45) / 90)
exe 'vert 1resize ' . ((&columns * 160 + 160) / 320)
exe '2resize ' . ((&lines * 4 + 45) / 90)
exe 'vert 2resize ' . ((&columns * 160 + 160) / 320)
exe 'vert 3resize ' . ((&columns * 159 + 160) / 320)
tabedit /ashe/nvim/autoload
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 85 + 45) / 90)
exe 'vert 1resize ' . ((&columns * 160 + 160) / 320)
exe '2resize ' . ((&lines * 85 + 45) / 90)
exe 'vert 2resize ' . ((&columns * 159 + 160) / 320)
exe '3resize ' . ((&lines * 1 + 45) / 90)
argglobal
if bufexists("/ashe/nvim/autoload") | buffer /ashe/nvim/autoload | else | edit /ashe/nvim/autoload | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 10 - ((9 * winheight(0) + 42) / 85)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
10
normal! 0
lcd /usr/src/zshlabs
wincmd w
argglobal
if bufexists("/ashe/nvim/autoload/ashe/core/window.vim") | buffer /ashe/nvim/autoload/ashe/core/window.vim | else | edit /ashe/nvim/autoload/ashe/core/window.vim | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 1 - ((0 * winheight(0) + 42) / 85)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
wincmd w
argglobal
enew
file /usr/src/zshlabs/NetrwMessage
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
lcd /usr/src/zshlabs
wincmd w
exe '1resize ' . ((&lines * 85 + 45) / 90)
exe 'vert 1resize ' . ((&columns * 160 + 160) / 320)
exe '2resize ' . ((&lines * 85 + 45) / 90)
exe 'vert 2resize ' . ((&columns * 159 + 160) / 320)
exe '3resize ' . ((&lines * 1 + 45) / 90)
tabnext 1
set stal=1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOF
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
