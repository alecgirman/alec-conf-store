#!/usr/bin/nvim -S
let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/ashe/nvim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 init.vim
badd +45 autoload/keybinds.vim
badd +1 ~/ashe/docs/IDEAS.md
badd +0 myfile.txt
badd +3 buffers.txt
badd +0 bufferlist.txt
argglobal
%argdel
set stal=2
edit init.vim
set splitbelow splitright
wincmd _ | wincmd |
split
1wincmd k
wincmd w
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
wincmd _ | wincmd |
split
1wincmd k
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe '1resize ' . ((&lines * 28 + 44) / 89)
exe '2resize ' . ((&lines * 57 + 44) / 89)
exe 'vert 2resize ' . ((&columns * 159 + 160) / 320)
exe '3resize ' . ((&lines * 28 + 44) / 89)
exe 'vert 3resize ' . ((&columns * 160 + 160) / 320)
exe '4resize ' . ((&lines * 28 + 44) / 89)
exe 'vert 4resize ' . ((&columns * 160 + 160) / 320)
argglobal
if bufexists("/usr/share/nvim/runtime/doc/editing.txt") | buffer /usr/share/nvim/runtime/doc/editing.txt | else | edit /usr/share/nvim/runtime/doc/editing.txt | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 1101 - ((8 * winheight(0) + 14) / 28)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1101
normal! 0
wincmd w
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
1,6fold
8,17fold
23,27fold
23,27fold
29,34fold
29,34fold
29,35fold
36,40fold
42,52fold
54,59fold
1
normal! zo
8
normal! zo
23
normal! zo
29
normal! zo
29
normal! zo
54
normal! zo
let s:l = 21 - ((20 * winheight(0) + 28) / 57)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
21
normal! 025|
wincmd w
argglobal
if bufexists("/usr/share/nvim/runtime/doc/eval.txt") | buffer /usr/share/nvim/runtime/doc/eval.txt | else | edit /usr/share/nvim/runtime/doc/eval.txt | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 1422 - ((10 * winheight(0) + 14) / 28)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1422
normal! 072|
wincmd w
argglobal
if bufexists("autoload/keybinds.vim") | buffer autoload/keybinds.vim | else | edit autoload/keybinds.vim | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 45 - ((24 * winheight(0) + 14) / 28)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
45
normal! 0
wincmd w
3wincmd w
exe '1resize ' . ((&lines * 28 + 44) / 89)
exe '2resize ' . ((&lines * 57 + 44) / 89)
exe 'vert 2resize ' . ((&columns * 159 + 160) / 320)
exe '3resize ' . ((&lines * 28 + 44) / 89)
exe 'vert 3resize ' . ((&columns * 160 + 160) / 320)
exe '4resize ' . ((&lines * 28 + 44) / 89)
exe 'vert 4resize ' . ((&columns * 160 + 160) / 320)
tabnew
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
exe 'vert 1resize ' . ((&columns * 160 + 160) / 320)
exe 'vert 2resize ' . ((&columns * 159 + 160) / 320)
argglobal
if bufexists("/usr/share/nvim/runtime/doc/autocmd.txt") | buffer /usr/share/nvim/runtime/doc/autocmd.txt | else | edit /usr/share/nvim/runtime/doc/autocmd.txt | endif
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
silent! normal! zE
let s:l = 685 - ((64 * winheight(0) + 43) / 86)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
685
normal! 057|
wincmd w
argglobal
enew
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
wincmd w
exe 'vert 1resize ' . ((&columns * 160 + 160) / 320)
exe 'vert 2resize ' . ((&columns * 159 + 160) / 320)
tabedit ~/ashe/docs/IDEAS.md
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 26 - ((25 * winheight(0) + 43) / 86)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
26
normal! 0
tabnext 1
set stal=1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOF
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
